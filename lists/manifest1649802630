apiVersion: batch/v1
kind: Job
metadata:
  name: ecolitk-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ecolitk", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ecolitk /mnt/libs/R/ecolitk && cd /home/rstudio && ls | grep "ecolitk" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ecolitk" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ecolitk" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ecolitk-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ecolitk-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: easyreporting-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("easyreporting", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/easyreporting /mnt/libs/R/easyreporting && cd /home/rstudio && ls | grep "easyreporting" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "easyreporting" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "easyreporting" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: easyreporting-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: easyreporting-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dyebias-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dyebias", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dyebias /mnt/libs/R/dyebias && cd /home/rstudio && ls | grep "dyebias" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dyebias" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dyebias" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: dyebias-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: dyebias-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dupradar-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dupRadar", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dupRadar /mnt/libs/R/dupRadar && cd /home/rstudio && ls | grep "dupRadar" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dupRadar" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dupRadar" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: dupradar-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: dupradar-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: drawproteins-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("drawProteins", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/drawProteins /mnt/libs/R/drawProteins && cd /home/rstudio && ls | grep "drawProteins" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "drawProteins" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "drawProteins" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: drawproteins-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: drawproteins-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dks-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dks", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dks /mnt/libs/R/dks && cd /home/rstudio && ls | grep "dks" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dks" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dks" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: dks-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: dks-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: discordant-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("discordant", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/discordant /mnt/libs/R/discordant && cd /home/rstudio && ls | grep "discordant" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "discordant" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "discordant" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: discordant-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: discordant-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: diffustats-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("diffuStats", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/diffuStats /mnt/libs/R/diffuStats && cd /home/rstudio && ls | grep "diffuStats" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffuStats" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffuStats" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: diffustats-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: diffustats-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: diffgeneanalysis-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("diffGeneAnalysis", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/diffGeneAnalysis /mnt/libs/R/diffGeneAnalysis && cd /home/rstudio && ls | grep "diffGeneAnalysis" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffGeneAnalysis" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "diffGeneAnalysis" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: diffgeneanalysis-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: diffgeneanalysis-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: deltagseg-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("deltaGseg", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/deltaGseg /mnt/libs/R/deltaGseg && cd /home/rstudio && ls | grep "deltaGseg" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "deltaGseg" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "deltaGseg" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: deltagseg-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: deltagseg-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dearseq-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("dearseq", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/dearseq /mnt/libs/R/dearseq && cd /home/rstudio && ls | grep "dearseq" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dearseq" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "dearseq" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: dearseq-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: dearseq-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ddct-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ddCt", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ddCt /mnt/libs/R/ddCt && cd /home/rstudio && ls | grep "ddCt" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ddCt" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ddCt" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ddct-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ddct-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: dama-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("daMA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/daMA /mnt/libs/R/daMA && cd /home/rstudio && ls | grep "daMA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "daMA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "daMA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: dama-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: dama-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ctsge-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ctsGE", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ctsGE /mnt/libs/R/ctsGE && cd /home/rstudio && ls | grep "ctsGE" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ctsGE" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ctsGE" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ctsge-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ctsge-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: copa-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("copa", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/copa /mnt/libs/R/copa && cd /home/rstudio && ls | grep "copa" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "copa" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "copa" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: copa-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: copa-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: consensus-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("consensus", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/consensus /mnt/libs/R/consensus && cd /home/rstudio && ls | grep "consensus" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "consensus" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "consensus" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: consensus-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: consensus-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cogps-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("coGPS", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/coGPS /mnt/libs/R/coGPS && cd /home/rstudio && ls | grep "coGPS" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "coGPS" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "coGPS" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: cogps-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: cogps-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clusterstab-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clusterStab", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clusterStab /mnt/libs/R/clusterStab && cd /home/rstudio && ls | grep "clusterStab" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterStab" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clusterStab" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: clusterstab-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: clusterstab-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clustcomp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clustComp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clustComp /mnt/libs/R/clustComp && cd /home/rstudio && ls | grep "clustComp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clustComp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clustComp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: clustcomp-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: clustcomp-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clonotyper-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clonotypeR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clonotypeR /mnt/libs/R/clonotypeR && cd /home/rstudio && ls | grep "clonotypeR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clonotypeR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clonotypeR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: clonotyper-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: clonotyper-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clippda-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("clippda", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/clippda /mnt/libs/R/clippda && cd /home/rstudio && ls | grep "clippda" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clippda" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "clippda" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: clippda-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: clippda-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cispath-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cisPath", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cisPath /mnt/libs/R/cisPath && cd /home/rstudio && ls | grep "cisPath" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cisPath" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cisPath" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: cispath-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: cispath-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chopsticks-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("chopsticks", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/chopsticks /mnt/libs/R/chopsticks && cd /home/rstudio && ls | grep "chopsticks" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chopsticks" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "chopsticks" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: chopsticks-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: chopsticks-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cellscape-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cellscape", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cellscape /mnt/libs/R/cellscape && cd /home/rstudio && ls | grep "cellscape" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cellscape" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cellscape" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: cellscape-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: cellscape-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ccrepe-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ccrepe", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ccrepe /mnt/libs/R/ccrepe && cd /home/rstudio && ls | grep "ccrepe" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccrepe" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ccrepe" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ccrepe-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ccrepe-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cancerclass-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("cancerclass", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/cancerclass /mnt/libs/R/cancerclass && cd /home/rstudio && ls | grep "cancerclass" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cancerclass" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "cancerclass" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: cancerclass-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: cancerclass-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: calm-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("calm", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/calm /mnt/libs/R/calm && cd /home/rstudio && ls | grep "calm" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "calm" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "calm" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: calm-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: calm-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: caomicsv-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("caOmicsV", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/caOmicsV /mnt/libs/R/caOmicsV && cd /home/rstudio && ls | grep "caOmicsV" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "caOmicsV" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "caOmicsV" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: caomicsv-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: caomicsv-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: bridge-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("bridge", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/bridge /mnt/libs/R/bridge && cd /home/rstudio && ls | grep "bridge" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "bridge" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "bridge" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: bridge-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: bridge-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: biobtreer-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("biobtreeR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/biobtreeR /mnt/libs/R/biobtreeR && cd /home/rstudio && ls | grep "biobtreeR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "biobtreeR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "biobtreeR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: biobtreer-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: biobtreer-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: beadarraysnp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("beadarraySNP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/beadarraySNP /mnt/libs/R/beadarraySNP && cd /home/rstudio && ls | grep "beadarraySNP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "beadarraySNP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "beadarraySNP" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: beadarraysnp-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: beadarraysnp-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: banocc-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("banocc", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/banocc /mnt/libs/R/banocc && cd /home/rstudio && ls | grep "banocc" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "banocc" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "banocc" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: banocc-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: banocc-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: arrayquality-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("arrayQuality", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/arrayQuality /mnt/libs/R/arrayQuality && cd /home/rstudio && ls | grep "arrayQuality" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "arrayQuality" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "arrayQuality" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: arrayquality-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: arrayquality-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: antiprofiles-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("antiProfiles", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/antiProfiles /mnt/libs/R/antiProfiles && cd /home/rstudio && ls | grep "antiProfiles" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "antiProfiles" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "antiProfiles" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: antiprofiles-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: antiprofiles-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: annotationtools-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("annotationTools", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/annotationTools /mnt/libs/R/annotationTools && cd /home/rstudio && ls | grep "annotationTools" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "annotationTools" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "annotationTools" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: annotationtools-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: annotationtools-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: agilp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("agilp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/agilp /mnt/libs/R/agilp && cd /home/rstudio && ls | grep "agilp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "agilp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "agilp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: agilp-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: agilp-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: affycomp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("affycomp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/affycomp /mnt/libs/R/affycomp && cd /home/rstudio && ls | grep "affycomp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "affycomp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "affycomp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: affycomp-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: affycomp-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: acde-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("acde", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/acde /mnt/libs/R/acde && cd /home/rstudio && ls | grep "acde" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "acde" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "acde" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: acde-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: acde-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: undo-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("UNDO", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/UNDO /mnt/libs/R/UNDO && cd /home/rstudio && ls | grep "UNDO" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "UNDO" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "UNDO" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: undo-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: undo-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: typeinfo-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("TypeInfo", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/TypeInfo /mnt/libs/R/TypeInfo && cd /home/rstudio && ls | grep "TypeInfo" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TypeInfo" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TypeInfo" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: typeinfo-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: typeinfo-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: treeandleaf-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("TreeAndLeaf", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/TreeAndLeaf /mnt/libs/R/TreeAndLeaf && cd /home/rstudio && ls | grep "TreeAndLeaf" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TreeAndLeaf" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TreeAndLeaf" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: treeandleaf-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: treeandleaf-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: travel-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Travel", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Travel /mnt/libs/R/Travel && cd /home/rstudio && ls | grep "Travel" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Travel" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Travel" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: travel-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: travel-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: trajectorygeometry-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("TrajectoryGeometry", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/TrajectoryGeometry /mnt/libs/R/TrajectoryGeometry && cd /home/rstudio && ls | grep "TrajectoryGeometry" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TrajectoryGeometry" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TrajectoryGeometry" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: trajectorygeometry-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: trajectorygeometry-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: targetsearch-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("TargetSearch", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/TargetSearch /mnt/libs/R/TargetSearch && cd /home/rstudio && ls | grep "TargetSearch" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TargetSearch" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TargetSearch" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: targetsearch-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: targetsearch-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: targetscore-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("TargetScore", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/TargetScore /mnt/libs/R/TargetScore && cd /home/rstudio && ls | grep "TargetScore" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TargetScore" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "TargetScore" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: targetscore-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: targetscore-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: swathxtend-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SwathXtend", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SwathXtend /mnt/libs/R/SwathXtend && cd /home/rstudio && ls | grep "SwathXtend" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SwathXtend" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SwathXtend" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: swathxtend-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: swathxtend-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: squadd-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SQUADD", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SQUADD /mnt/libs/R/SQUADD && cd /home/rstudio && ls | grep "SQUADD" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SQUADD" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SQUADD" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: squadd-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: squadd-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: somnibus-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SOMNiBUS", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SOMNiBUS /mnt/libs/R/SOMNiBUS && cd /home/rstudio && ls | grep "SOMNiBUS" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SOMNiBUS" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SOMNiBUS" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: somnibus-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: somnibus-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: snagee-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SNAGEE", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SNAGEE /mnt/libs/R/SNAGEE && cd /home/rstudio && ls | grep "SNAGEE" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SNAGEE" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SNAGEE" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: snagee-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: snagee-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: smap-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SMAP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SMAP /mnt/libs/R/SMAP && cd /home/rstudio && ls | grep "SMAP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SMAP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SMAP" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: smap-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: smap-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: slqpcr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SLqPCR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SLqPCR /mnt/libs/R/SLqPCR && cd /home/rstudio && ls | grep "SLqPCR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SLqPCR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SLqPCR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: slqpcr-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: slqpcr-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: simd-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SIMD", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SIMD /mnt/libs/R/SIMD && cd /home/rstudio && ls | grep "SIMD" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SIMD" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SIMD" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: simd-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: simd-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sepira-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SEPIRA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SEPIRA /mnt/libs/R/SEPIRA && cd /home/rstudio && ls | grep "SEPIRA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SEPIRA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SEPIRA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: sepira-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: sepira-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scbn-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SCBN", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SCBN /mnt/libs/R/SCBN && cd /home/rstudio && ls | grep "SCBN" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SCBN" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SCBN" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: scbn-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: scbn-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sbmlr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SBMLR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SBMLR /mnt/libs/R/SBMLR && cd /home/rstudio && ls | grep "SBMLR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SBMLR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SBMLR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: sbmlr-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: sbmlr-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: santa-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("SANTA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/SANTA /mnt/libs/R/SANTA && cd /home/rstudio && ls | grep "SANTA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SANTA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "SANTA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: santa-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: santa-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rtpca-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Rtpca", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Rtpca /mnt/libs/R/Rtpca && cd /home/rstudio && ls | grep "Rtpca" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rtpca" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rtpca" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rtpca-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rtpca-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rmagpie-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Rmagpie", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Rmagpie /mnt/libs/R/Rmagpie && cd /home/rstudio && ls | grep "Rmagpie" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rmagpie" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rmagpie" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rmagpie-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rmagpie-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rgin-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Rgin", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Rgin /mnt/libs/R/Rgin && cd /home/rstudio && ls | grep "Rgin" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rgin" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rgin" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rgin-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rgin-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rfastp-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Rfastp", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Rfastp /mnt/libs/R/Rfastp && cd /home/rstudio && ls | grep "Rfastp" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rfastp" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rfastp" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rfastp-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rfastp-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: reactomegsa-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ReactomeGSA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ReactomeGSA /mnt/libs/R/ReactomeGSA && cd /home/rstudio && ls | grep "ReactomeGSA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ReactomeGSA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ReactomeGSA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: reactomegsa-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: reactomegsa-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rdisop-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Rdisop", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Rdisop /mnt/libs/R/Rdisop && cd /home/rstudio && ls | grep "Rdisop" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rdisop" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Rdisop" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rdisop-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rdisop-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rbcbook1-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RbcBook1", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RbcBook1 /mnt/libs/R/RbcBook1 && cd /home/rstudio && ls | grep "RbcBook1" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RbcBook1" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RbcBook1" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rbcbook1-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rbcbook1-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rtopper-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RTopper", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RTopper /mnt/libs/R/RTopper && cd /home/rstudio && ls | grep "RTopper" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RTopper" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RTopper" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rtopper-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rtopper-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rtca-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RTCA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RTCA /mnt/libs/R/RTCA && cd /home/rstudio && ls | grep "RTCA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RTCA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RTCA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rtca-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rtca-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rrho-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RRHO", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RRHO /mnt/libs/R/RRHO && cd /home/rstudio && ls | grep "RRHO" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RRHO" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RRHO" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rrho-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rrho-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: roseq-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ROSeq", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ROSeq /mnt/libs/R/ROSeq && cd /home/rstudio && ls | grep "ROSeq" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ROSeq" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ROSeq" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: roseq-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: roseq-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rnaseqpower-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RNASeqPower", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RNASeqPower /mnt/libs/R/RNASeqPower && cd /home/rstudio && ls | grep "RNASeqPower" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RNASeqPower" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RNASeqPower" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rnaseqpower-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rnaseqpower-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rlassocox-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RLassoCox", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RLassoCox /mnt/libs/R/RLassoCox && cd /home/rstudio && ls | grep "RLassoCox" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RLassoCox" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RLassoCox" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rlassocox-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rlassocox-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rlmm-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RLMM", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RLMM /mnt/libs/R/RLMM && cd /home/rstudio && ls | grep "RLMM" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RLMM" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RLMM" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rlmm-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rlmm-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: river-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RIVER", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RIVER /mnt/libs/R/RIVER && cd /home/rstudio && ls | grep "RIVER" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RIVER" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RIVER" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: river-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: river-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rgraph2js-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RGraph2js", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RGraph2js /mnt/libs/R/RGraph2js && cd /home/rstudio && ls | grep "RGraph2js" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGraph2js" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGraph2js" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rgraph2js-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rgraph2js-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rgalaxy-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RGalaxy", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RGalaxy /mnt/libs/R/RGalaxy && cd /home/rstudio && ls | grep "RGalaxy" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGalaxy" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGalaxy" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rgalaxy-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rgalaxy-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rgsea-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RGSEA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RGSEA /mnt/libs/R/RGSEA && cd /home/rstudio && ls | grep "RGSEA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGSEA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RGSEA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rgsea-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rgsea-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rdrtoolbox-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RDRToolbox", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RDRToolbox /mnt/libs/R/RDRToolbox && cd /home/rstudio && ls | grep "RDRToolbox" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RDRToolbox" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RDRToolbox" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rdrtoolbox-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rdrtoolbox-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rcaspar-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RCASPAR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RCASPAR /mnt/libs/R/RCASPAR && cd /home/rstudio && ls | grep "RCASPAR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RCASPAR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RCASPAR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rcaspar-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rcaspar-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rbioinf-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RBioinf", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RBioinf /mnt/libs/R/RBioinf && cd /home/rstudio && ls | grep "RBioinf" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RBioinf" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RBioinf" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rbioinf-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rbioinf-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: rbm-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("RBM", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/RBM /mnt/libs/R/RBM && cd /home/rstudio && ls | grep "RBM" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RBM" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "RBM" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: rbm-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: rbm-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: quaternaryprod-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("QuaternaryProd", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/QuaternaryProd /mnt/libs/R/QuaternaryProd && cd /home/rstudio && ls | grep "QuaternaryProd" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "QuaternaryProd" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "QuaternaryProd" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: quaternaryprod-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: quaternaryprod-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pubscore-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PubScore", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PubScore /mnt/libs/R/PubScore && cd /home/rstudio && ls | grep "PubScore" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PubScore" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PubScore" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: pubscore-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: pubscore-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: phenogeneranker-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PhenoGeneRanker", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PhenoGeneRanker /mnt/libs/R/PhenoGeneRanker && cd /home/rstudio && ls | grep "PhenoGeneRanker" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PhenoGeneRanker" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PhenoGeneRanker" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: phenogeneranker-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: phenogeneranker-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pathnet-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PathNet", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PathNet /mnt/libs/R/PathNet && cd /home/rstudio && ls | grep "PathNet" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PathNet" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PathNet" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: pathnet-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: pathnet-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: path2ppi-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Path2PPI", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Path2PPI /mnt/libs/R/Path2PPI && cd /home/rstudio && ls | grep "Path2PPI" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Path2PPI" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Path2PPI" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: path2ppi-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: path2ppi-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: psea-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PSEA", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PSEA /mnt/libs/R/PSEA && cd /home/rstudio && ls | grep "PSEA" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PSEA" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PSEA" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: psea-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: psea-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: proper-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PROPER", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PROPER /mnt/libs/R/PROPER && cd /home/rstudio && ls | grep "PROPER" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PROPER" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PROPER" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: proper-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: proper-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: plpe-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PLPE", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PLPE /mnt/libs/R/PLPE && cd /home/rstudio && ls | grep "PLPE" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PLPE" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PLPE" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: plpe-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: plpe-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: panr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("PANR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/PANR /mnt/libs/R/PANR && cd /home/rstudio && ls | grep "PANR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PANR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "PANR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: panr-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: panr-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: orderedlist-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("OrderedList", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/OrderedList /mnt/libs/R/OrderedList && cd /home/rstudio && ls | grep "OrderedList" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OrderedList" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OrderedList" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: orderedlist-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: orderedlist-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: omixer-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("Omixer", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/Omixer /mnt/libs/R/Omixer && cd /home/rstudio && ls | grep "Omixer" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Omixer" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "Omixer" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: omixer-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: omixer-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: osat-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("OSAT", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/OSAT /mnt/libs/R/OSAT && cd /home/rstudio && ls | grep "OSAT" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OSAT" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OSAT" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: osat-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: osat-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: opweight-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("OPWeight", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/OPWeight /mnt/libs/R/OPWeight && cd /home/rstudio && ls | grep "OPWeight" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OPWeight" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OPWeight" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: opweight-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: opweight-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ocplus-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("OCplus", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/OCplus /mnt/libs/R/OCplus && cd /home/rstudio && ls | grep "OCplus" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OCplus" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "OCplus" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ocplus-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ocplus-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nupop-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NuPoP", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NuPoP /mnt/libs/R/NuPoP && cd /home/rstudio && ls | grep "NuPoP" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NuPoP" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NuPoP" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: nupop-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: nupop-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: normqpcr-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NormqPCR", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NormqPCR /mnt/libs/R/NormqPCR && cd /home/rstudio && ls | grep "NormqPCR" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NormqPCR" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NormqPCR" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: normqpcr-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: normqpcr-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: netpathminer-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NetPathMiner", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NetPathMiner /mnt/libs/R/NetPathMiner && cd /home/rstudio && ls | grep "NetPathMiner" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NetPathMiner" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NetPathMiner" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: netpathminer-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: netpathminer-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: neighbornet-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NeighborNet", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NeighborNet /mnt/libs/R/NeighborNet && cd /home/rstudio && ls | grep "NeighborNet" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NeighborNet" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NeighborNet" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: neighbornet-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: neighbornet-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nanostringdiff-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NanoStringDiff", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NanoStringDiff /mnt/libs/R/NanoStringDiff && cd /home/rstudio && ls | grep "NanoStringDiff" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NanoStringDiff" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NanoStringDiff" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: nanostringdiff-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: nanostringdiff-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ntw-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("NTW", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/NTW /mnt/libs/R/NTW && cd /home/rstudio && ls | grep "NTW" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NTW" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "NTW" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: ntw-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: ntw-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: multimed-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("MultiMed", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/MultiMed /mnt/libs/R/MultiMed && cd /home/rstudio && ls | grep "MultiMed" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "MultiMed" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "MultiMed" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: multimed-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: multimed-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: modcon-build
  namespace: js-build
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "In"
                values: ["am-test-cm-5203b9","am-test-cm-5e7462","am-test-cm-6a618a","am-test-cm-a6a276","am-test-cm-d9658b"]
      securityContext:
        runAsUser: 0
        fsGroup: 1000
      volumes:
        - name: libraries
          persistentVolumeClaim:
            claimName: manual-js-build
        - name: tmplibrary
          emptyDir: {}
        - name: tmphome
          emptyDir: {}
      restartPolicy: OnFailure
      initContainers:
      - name: build
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - su rstudio && cd /home/rstudio && Rscript -e 'p <- .libPaths(); p <- c("/tmp/local/lib/R/site-library", p); .libPaths(p); if(BiocManager::install("ModCon", INSTALL_opts = "--build", update = FALSE, quiet = TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
        env:
          - name: R_LIBS_USER
            value: "/mnt/libs/R"
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 500Mi
            cpu: 300m
          # limits:
          #   memory: 2Gi
          #   cpu: 2000m
      - name: nfs-copy
        image: bioconductor/bioconductor_docker:RELEASE_3_14
        command:
          - /bin/bash
          - -c
        args:
          - cp -r /tmp/local/lib/R/site-library/ModCon /mnt/libs/R/ModCon && cd /home/rstudio && ls | grep "ModCon" | xargs -i cp ./{} /mnt/libs/R/{}
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      containers:
      - name: rclone-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ModCon" | xargs -i rclone copyto ./{} osn:bir190004-bucket01/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
      - name: iu-swift-copy
        image: rclone/rclone:latest
        command:
          - /bin/sh
          - -c
        args:
          - cp /mnt/libs/R/.rclone.conf ~/.rclone.conf && cd /home/rstudio && ls | grep "ModCon" | xargs -i rclone copyto ./{} taccjs:js-builder/packages/RELEASE_3_14/container/{} -v
        volumeMounts:
          - name: libraries
            mountPath: "/mnt/libs/R"
          - name: tmplibrary
            mountPath: "/tmp/local/lib/R/site-library"
          - name: tmphome
            mountPath: "/home/rstudio"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
  backoffLimit: 4
---
apiVersion: "autoscaling.k8s.io/v1"
kind: VerticalPodAutoscaler
metadata:
  name: modcon-build
  namespace: js-build
spec:
  targetRef:
    apiVersion: "batch/v1"
    kind: Job
    name: modcon-build
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
      - containerName: 'build'
        minAllowed:
          cpu: 300m
          memory: 500Mi
        maxAllowed:
          cpu: 3
          memory: 3000Mi
        controlledResources: ["cpu", "memory"]
---
